
/* Ensure placeholders have good contrast */
::placeholder {
  color: var(--bs-input-placeholder-color) !important;
  opacity: 1 !important;
}


/* These color codes are taken from bootstrap. See https://getbootstrap.com/docs/5.0/utilities/colors/#variables
for a discussion about variables and sass. */

.failure:focus{
  outline: none;
  box-shadow: 0 0 0 5px #dc3545; /* $red */
}

.dropHere{
  outline: none;
  box-shadow: 0 0 0 5px #0dcaf0; /* $cyan */
}

.card:focus, .dropzone:focus {
	outline-color: rgb(0, 95, 204);
	outline-style: auto;
	outline-width: 1px;
}

.navbarCard {
  padding-top: 4px!important;
  padding-bottom: 4px!important;
}

.widget {
  flex-grow: 1;
}

.disabledIcon {
  opacity: 0.5; /* Make the icon appear faded */
  pointer-events: none; /* Prevent user interactions */
  cursor: not-allowed; /* Change the cursor to indicate the icon is disabled */
}

/************
  * Accordion styles
  * These styles are used to customize the appearance of the accordion component as generated in PerspectivesTable.
*************/

/* Position the caret to the right edge */
.accordion-button::after {
  margin-left: auto;
}

/* When the accordion header contains our custom component */
.accordion-button > div {
  flex: 1;
  margin-right: 15px; /* Space between our content and the caret */
}

/* Make sure the button doesn't get bootstrap's hover styles */
.accordion-button .btn-link:hover,
.accordion-button .btn-link:focus {
  background-color: transparent !important;
  box-shadow: none !important;
}

/* For when the accordion item is open. */
.accordion-button:not(.collapsed) {
  --bs-accordion-active-bg: var(--bs-dark-bg-subtle) !important;
}

/* STYLES RELATED TO SWIPE GESTURES */
.swiping {
  transition: transform 0.1s ease, opacity 0.1s ease;
}

.swipe-confirm-element {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.swipe-confirm-buttons {
  display: flex;
  gap: 10px;
  justify-content: flex-end;
}

/* Simplified actions: inline inside header */
.accordion-actions { display: flex; align-items: center; gap: .25rem; }
.accordion-button .text-truncate { pointer-events: none; min-width: 0; }

/* Hide bootstrap's caret when using hide-caret class */
.hide-caret.dropdown-toggle::after,
.hide-caret .dropdown-toggle::after {
  display: none !important;
}

/* Per-table selection highlight independent of browser focus */
.card-selected {
  /* Visual highlight similar to bootstrap focus but not tied to :focus */
  box-shadow: 0 0 0 2px var(--bs-primary, #0d6efd) inset, 0 0 0 2px var(--bs-primary, #0d6efd);
  background-color: rgba(13,110,253,0.08) !important;
  border-color: var(--bs-primary, #0d6efd) !important;
}

/* Ensure inner input inherits highlight if wrapper gets class via adornment */
.card-selected input.form-control,
.card-selected .form-control {
  background-color: transparent;
  box-shadow: none;
}

